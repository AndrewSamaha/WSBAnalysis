# WSBAnalysis
An analysis of posts on r/WallStreetBets

# Background
In the January 2021, a large group of individual investors held together by an online forums (r/WallStreetBets) pushed a stock (GME) from a modest $17/share to $347/share. This was considered noteworthy because a) institutional investors had signaled the company was overvalued and were shorting it and b) those institutional investors lost a significant amount of money, with one allegedly going bankrupt.

See also [Building an algorithmic trading strategy with r/wallstreetbets discussion data](https://www.reddit.com/r/algotrading/comments/lmtp17/building_an_algorithmic_trading_strategy_with/)

Hence, the structure of this online community is worthy of investigation because of its ability to steer the behavior of a large number of invidivual investors in a way that negates contrary messaging of top-down institutional decision makers and actors. With that in mind, the purpose of this investigation is to gain an understanding of the structure of the online community, how it communicates about stock, how messages about stocks disseminate and maintain in the discourse, and so on.

<% 
# In order to import local python files, https://stackoverflow.com/questions/47138793/pweave-cannot-import-local-module
import os
import sys
import datetime
sys.path.append(os.getcwd())
from wsba import * 
%>

# The Data
<% first,last = getdaterange() %>
As of <%print(datetime.date.today().strftime('%m/%d/%y'))%>, the dataset consisted of <%= getnumsubmissions() %> submissions to r/WallStreetBets from <%print(first['date'].strftime('%m/%d/%y'))%> to <%print(last['date'].strftime('%m/%d/%y'))%>. These were scraped using the Reddit API and a tool I developed, [WSBScraper](https://github.com/AndrewSamaha/WSBScraper), which saves posts to a MongoDB.

A Sample:
```
{ 
    "_id" : ObjectId("605bb15d5df7eedfb49c1b8d"), 
    "id" : "mchdcf", 
    "fullname" : "t3_mchdcf", 
    "selftext" : "", 
    "created_utc" : "2021-03-24 17:36:29", 
    "num_comments" : 2, 
    "score" : 7, 
    "upvote_ratio" : 1, 
    "is_original_content" : false, 
    "permalink" : "/r/wallstreetbets/comments/mchdcf/im_an_abe_and_i_eat_crayons_keeping_those_gme/", 
    "title" : "I‚Äôm an abe ü¶ç and I eat crayons üñç Keeping those GME contracts because selling is a loss all in its own! 17K down and still holding strong!", 
    "author" : "Powerful-Ad812", 
    "firstseen" : "2021-03-24 21:38:37.008913" 
}
```

# The authors
A total of <% 
(num, b, c, d) = get_authors() 
print(num)
%> submission authors are represented in the data. The plot below shows a histogram of the authors ranked from most to lease posts. Note the vast majority of posters only posted once during the time period. Conversely, a minority of posters contributed 6 or more posts.
![Figure 1](figures/pda_numposts.png)
![Figure 2](figures/pda_numposts_hist.png)
![Figure 3](figures/pda_biggestposters.png)
<% makeauthorfigures() %>

<% makebiggestauthortable() %>

# Some Initial Observations
1. Stocks are sometimes written in capital letters in the middle of a word
1. Stocks are sometimes written beginning with a $ and ending with a space
1. Only one of the big authors is a bot (AutoModerator) as determined by visual inspection of their posts.

# Posts Per Hour
Below is a graph of the total number of posts for each hour. Note the extreme outlier -- those took place during a four-hour period on March 24th, 2021 (shortly after 2000 hours on the graph below).<br>
![Figure 3](figures/posts_per_hour.png)
<% posts_per_hour(['figures/posts_per_hour.png','figures/avg_posts_per_hour.png']) %>

Here are the same data aggregated across hours plotted with 95% bootstrapped confidence bands (60k resamples each hour). Note the intra-day pattern, with the lowest frequency of posts occurring between midnight and 9AM UTC.<br>
![Figure 3](figures/avg_posts_per_hour.png)

# Analysis of Submission Post Times
Below is a histogram of submission deltas (seconds between posts) plotted with a log y-axis. As can be seen in the figure, the majority of the posts occur less than 5,000 seconds apart, or ~83 minutes. 
![Figure 4](figures/submissiondeltas.png)
<% getsubmissiondeltas(save='figures/submissiondeltas.png') %>

Removing deltas above 5000 gives us a smooth distribution that we can plot in arithmatic space:<br>
![Figure 5](figures/submissiondeltas_clean.png)
<% getsubmissiondeltas(max=5000,log=False,save='figures/submissiondeltas_clean.png') %>

Also, it's worth examining the left-side of the distribution more closely to make sure the geometric shape still holds true at shorter deltas.<br>
![Figure 6](figures/submissiondeltas_left.png)
<% getsubmissiondeltas(max=200,log=False,save='figures/submissiondeltas_left.png') %>

# Submission Impact EDA
There seem to be at least three measures related to the impact of each submission:
1. Score - This is similar to likes or upvotes on other social media platforms
1. Number of Comments - The most people are commenting on a post, the more exposure it's received and likely to receive in the future
1. Upvote Ratio - The proportion of upvotes to the total number of votes

<% fig_field_by_age('score',save=True) %>

One might assume that older submissions tend to have more upvotes and hence, a higher score. However, no obvious relationship exists between score and submission age. Still, we can use this figure to examine the distribution of scores. Given the right-tailed skew, let's examine the distribution on a log axis.

<% fig_field_by_age('score',save=True,ymin=1,logy=True, ymedian=True, ymean=True) %>


<% fig_field_by_age('upvote_ratio',save=True,ymedian=True, ymean=True) %>


<% fig_field_by_age('num_comments',save=True) %>


<% fig_field_by_age('num_comments',ymin=1,logy=True,save=True, ymedian=True, ymean=True) %>

# Impact Relationships

## Score vs Num Comments

<% fig_field_by_field('num_comments','score',save=True) %>

These figures show the relationship between a submission's score and the number of comments it's received. The figure seems to show three clusters of data points. For now, let's focus on those happening in scores less than 2000, as this seems to be the majority of submissions (<%= round(count({'score': {'$lte':2000}})*100/count({})) %>%) and it looks like there might be a postive correlation between the two.

<% fig_field_by_field('num_comments','score',fielda_max=10_000,xmin=0,save=True,mean=True,median=True,regression=True) %>

<% fig_field_by_field('num_comments','score',fielda_max=2_000,xmin=0,save=True,mean=True,median=True,regression=True) %>

Excluding scores greater than 2000, we can see a clear positive relationship between score and the number of comments. This relationship can be see even more clearly when the data are plotted in log-log coordinates:

<% fig_field_by_field('num_comments','score',fielda_max=2_000,xmin=1,ymin=1,logx=True,logy=True,save=True,mean=True,median=True, regression=True) %>

And adding in the entire range of data, we can see the effect of the previously excluded data is negligable on that relationhip:

<% fig_field_by_field('num_comments','score',logx=True,logy=True,xmin=1,ymin=1,mean=True,median=True,save=True,regression=True) %>


## Upvote Ratio vs. Num Comments

<% fig_field_by_field('num_comments','upvote_ratio',mean=True,median=True,save=True) %>

<% fig_field_by_field('num_comments','upvote_ratio',mean=True,median=True,xmax=4_000,xmin=0,save=True) %>

<% fig_field_by_field('num_comments','upvote_ratio',logx=True,xmin=1,median=True,mean=True,save=True) %>

## Upvote Ratio vs. Score

<% fig_field_by_field('score','upvote_ratio',mean=True,median=True,save=True) %>

<% fig_field_by_field('score','upvote_ratio',xmax=4_000,xmin=0,save=True) %>

<% fig_field_by_field('score','upvote_ratio',xmin=1,logx=True,mean=True,median=True,save=True) %>

# Next Steps
FIT THE DATA TO AN EXPONENTIAL DISTRIBUTION (or, geometric???)

Find the mentions of stocks and plot them across time

What makes a 'good' post?
What's the best time to post to get seen? Does this question differ if the 'judgement' of the post is negative or positive? I.e., is there a time to post that is associated with a greater likelihood of getting upvotes as opposed to getting either an upvote or a down vote?

Does reputation matter?
What's the average exposure, average upvote ratio for all posters versus the most productive posters? Are there statistically significant differences in those compared to average and between posters?
1. update the score and upvote ratio for existing submissions
1. what about number of comments?




# Technology Stack
1. Python
1. Jupyter Labs (pda/eda)
1. WSBScraper/MongoDB/Docker (backend)
1. Matplotlib/Seaborn (visualization)
1. PWeave (CI/CD: this readme)

_This file was compiled on <%print(datetime.date.today())%>._